version: "3"

services:
  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - '${REDIS_PORT}'
    command: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD} # FIXME: how long cache values will be stored
    volumes: 
      - redis:/data
  db:
    image: postgres:14.1-alpine
    restart: always
    container_name: postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      # - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    command: ["postgres", "-c", "config_file=/var/lib/postgresql/data/postgresql.conf"]
    volumes: 
      - db:/var/lib/postgresql/data
      - ./src/infra/db/postgreslq/init.sql:/docker-entrypoint-initdb.d/init.sql
  api:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/api/src
    ports:
      - "${APIPORT}:${APIPORT}"
    command: >
      sh -c "npm run start"
    container_name: pulpo-coding-challenge_api
    depends_on:
      - redis
      - db
    links:
      - redis
      - db
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=${APIPORT}
      - PRIMARYKEY=${IATIAPI_PRIMARYKEY}
      - REDIS_URL=redis://redis
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_PORT=${POSTGRES_PORT}
volumes:
  redis:
    driver: local
  db:
    driver: local