import { IBaseUserInput } from '../../interfaces/user-interface'

export class User implements IBaseUserInput {
  userName: string
  hashPassword: string
  email: string

  constructor (baseUser: IBaseUserInput) {
    // COMEBACK: ID is autogenerated by db or here

    if (baseUser !== undefined) {
      const isValid = this.isEmailValid(baseUser.email)
      if (isValid) {
        this.userName = baseUser.userName
        this.hashPassword = baseUser.hashPassword
        this.email = baseUser.email
      }
    } else {
      // FIXME: throw an error
      console.log('the email was not valid')
    }
  }

  // COMEBACK: Use a package fro this
  isEmailValid (email: string | undefined): boolean {
    const emailRegex: RegExp = /[-!#$%&'*+/0-9=?A-Z^_a-z{|}~](\.?[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\.?[a-zA-Z0-9])*\.[a-zA-Z](-?[a-zA-Z0-9])+/g

    if (email == null || email === undefined) { return false }

    if (email.length > 254) { return false }

    const valid = emailRegex.test(email)
    if (!valid) { return false }

    const parts = email.split('@')
    if (parts[0].length > 64) { return false }

    const domainParts = parts[1].split('.')
    if (domainParts.some(function (part) { return part.length > 63 })) { return false }

    return true
  }
}
